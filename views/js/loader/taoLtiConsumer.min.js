define("taoLtiConsumer/controller/DeliveryMgmt/wizard",["lodash","jquery","i18n","ui/filter","ui/feedback","util/url","layout/actions","core/promise","core/taskQueue/taskQueue","ui/taskQueueButton/standardButton","ui/switch/switch","css!/taoLtiConsumer/views/css/wizard.css"],function(_,$,__,filterFactory,feedback,urlUtils,actionManager,Promise,taskQueue,taskCreationButtonFactory,switchFactory){"use strict";var provider_listProviders=function(data){return new Promise(function(resolve,reject){$.ajax({url:urlUtils.route("getAvailableLtiProviders","DeliveryMgmt","taoLtiConsumer"),data:{q:data.q,page:data.page},type:"GET",dataType:"JSON"}).done(function(tests){
tests?resolve(tests):reject(new Error(__("Unable to load lti providers")))}).fail(function(){reject(new Error(__("Unable to load lti providers")))})})},provider_listTests=function(data){return new Promise(function(resolve,reject){$.ajax({url:urlUtils.route("getAvailableTests","DeliveryMgmt","taoDeliveryRdf"),data:{q:data.q,page:data.page},type:"GET",dataType:"JSON"}).done(function(tests){tests?resolve(tests):reject(new Error(__("Unable to load tests")))}).fail(function(){reject(new Error(__("Unable to load tests")))})})},refreshTree=function(uriResource){actionManager.trigger("refresh",{uri:uriResource})};return{start:function(){
var taskCompiledCreationButton,taskLtiCreationButton,$multiForm=$(".multi-form-container"),$switch=$(".form-switch",$multiForm),$compiledForm=$("#simpleWizard"),$ltiForm=$("#simpleLtiWizard"),$testFilterContainer=$compiledForm.find(".test-select-container"),$providerFilterContainer=$ltiForm.find(".lti-provider-select-container"),$testFormElement=$("#test"),$providerFormElement=$("#ltiProvider"),$compiledContainer=$compiledForm.closest(".content-block"),$ltiContainer=$ltiForm.closest(".content-block"),$oldCompiledSubmitter=$compiledForm.find(".form-submitter"),$oldLtiSubmitter=$ltiForm.find(".form-submitter");$ltiForm.addClass("hidden"),switchFactory($switch,
{on:{label:__("TAO delivery"),active:!0},off:{label:__("LTI based delivery")},monoStyle:!0}).on("change",function(){$ltiForm.toggleClass("hidden"),$compiledForm.toggleClass("hidden")}),filterFactory($testFilterContainer,{placeholder:__("Select the test you want to publish to the test-takers"),width:"64%",quietMillis:1e3,label:__("Select the test")}).on("change",function(chosenTest){$testFormElement.val(chosenTest),chosenTest?taskCompiledCreationButton.enable():taskCompiledCreationButton.disable()}).on("request",function(params){provider_listTests(params.data).then(function(tests){params.success(tests)}).catch(function(err){params.error(err),feedback().error(
err)})}).render("<%- text %>"),filterFactory($providerFilterContainer,{placeholder:__("Select the Provider you want to publish"),width:"64%",quietMillis:1e3,label:__("LTI Provider")}).on("change",function(chosenProvider){$providerFormElement.val(chosenProvider),chosenProvider?taskLtiCreationButton.enable():taskLtiCreationButton.disable()}).on("request",function(params){provider_listProviders(params.data).then(function(tests){params.success(tests)}).catch(function(err){params.error(err),feedback().error(err)})}).render("<%- text %>"),taskCompiledCreationButton=taskCreationButtonFactory({type:"info",icon:"delivery",title:__("Publish the test"),label:__(
"Publish"),taskQueue:taskQueue,taskCreationUrl:$compiledForm.prop("action"),taskCreationData:function(){return $compiledForm.serializeArray()},taskReportContainer:$compiledContainer}).on("finished",function(result){result.task&&result.task.report&&_.isArray(result.task.report.children)&&result.task.report.children.length&&result.task.report.children[0]&&(result.task.report.children[0].data&&result.task.report.children[0].data.uriResource?(feedback().info(__("%s completed",result.task.taskLabel)),refreshTree(result.task.report.children[0].data.uriResource)):this.displayReport(result.task.report.children[0],__("Error")))}).on("continue",function(){refreshTree(
)}).on("error",function(err){feedback().error(err)}).render($oldCompiledSubmitter.closest(".form-toolbar")).disable(),$oldCompiledSubmitter.replaceWith(taskCompiledCreationButton.getElement()),taskLtiCreationButton=taskCreationButtonFactory({type:"info",icon:"delivery",title:__("Publish the test"),label:__("Publish"),taskQueue:taskQueue,taskCreationUrl:$ltiForm.prop("action"),taskCreationData:function(){return $ltiForm.serializeArray()},taskReportContainer:$ltiContainer}).on("finished",function(result){result.task&&result.task.report&&_.isArray(result.task.report.children)&&result.task.report.children.length&&result.task.report.children[0]&&(
result.task.report.children[0].data&&result.task.report.children[0].data.uriResource?(feedback().info(__("%s completed",result.task.taskLabel)),refreshTree(result.task.report.children[0].data.uriResource)):this.displayReport(result.task.report.children[0],__("Error")))}).on("continue",function(){refreshTree()}).on("error",function(err){feedback().error(err)}).render($oldLtiSubmitter.closest(".form-toolbar")).disable(),$oldLtiSubmitter.replaceWith(taskLtiCreationButton.getElement())}}}),define("taoLtiConsumer/controller/routes",{DeliveryMgmt:{actions:{wizard:"controller/DeliveryMgmt/wizard"}}}),define("taoLtiConsumer/loader/taoLtiConsumer.bundle",function(){}
);
//# sourceMappingURL=taoLtiConsumer.min.js.map